diff --git a/webview-ui/src/components/chat/ChatTextArea.tsx b/webview-ui/src/components/chat/ChatTextArea.tsx
index a52902f1..a4c93ed6 100644
--- a/webview-ui/src/components/chat/ChatTextArea.tsx
+++ b/webview-ui/src/components/chat/ChatTextArea.tsx
@@ -51,6 +51,8 @@ interface ChatTextAreaProps {
 	// Edit mode props
 	isEditMode?: boolean
 	onCancel?: () => void
+	isSavingMemory: boolean
+	setIsSavingMemory: (value: boolean) => void
 }
 
 const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
@@ -72,6 +74,8 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 			modeShortcutText,
 			isEditMode = false,
 			onCancel,
+			isSavingMemory,
+			setIsSavingMemory,
 		},
 		ref,
 	) => {
@@ -213,6 +217,9 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 		const contextMenuContainerRef = useRef<HTMLDivElement>(null)
 		const [isEnhancingPrompt, setIsEnhancingPrompt] = useState(false)
 		const [isFocused, setIsFocused] = useState(false)
+		const [isCommandMode, setIsCommandMode] = useState(false)
+		const [isMemoryMode, setIsMemoryMode] = useState(false)
+
 
 		// Use custom hook for prompt history navigation
 		const { handleHistoryNavigation, resetHistoryNavigation, resetOnInputChange } = usePromptHistory({
@@ -235,6 +242,10 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 		}, [selectedType, searchQuery])
 
 		const handleEnhancePrompt = useCallback(() => {
+			if (sendingDisabled) {
+				return
+			}
+
 			const trimmedInput = inputValue.trim()
 
 			if (trimmedInput) {
@@ -243,7 +254,7 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 			} else {
 				setInputValue(t("chat:enhancePromptDescription"))
 			}
-		}, [inputValue, setInputValue, t])
+		}, [inputValue, setInputValue, t, setIsEnhancingPrompt])
 
 		const allModes = useMemo(() => getAllModes(customModes), [customModes])
 
@@ -384,6 +395,36 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 			[setInputValue, cursorPosition],
 		)
 
+		const handleSend = useCallback(() => {
+			if (isCommandMode) {
+				onSend()
+				vscode.postMessage({ type: "useTerminalCommand" as const, text: inputValue })
+			} else if (isMemoryMode) {
+				const trimmedInput = inputValue.trim()
+				if (trimmedInput) {
+					setIsSavingMemory(true)
+					vscode.postMessage({ type: "saveMemory" as const, text: trimmedInput })
+				} else {
+					setIsSavingMemory(true)
+					vscode.postMessage({ type: "saveMemory" as const, text: "" })
+				}
+				setInputValue("")
+			} else {
+				resetHistoryNavigation()
+				onSend()
+			}
+			setIsCommandMode(false)
+			setIsMemoryMode(false)
+		}, [
+			onSend,
+			isCommandMode,
+			setIsCommandMode,
+			isMemoryMode,
+			setIsMemoryMode,
+			inputValue,
+			setInputValue,
+		])
+
 		const handleKeyDown = useCallback(
 			(event: React.KeyboardEvent<HTMLTextAreaElement>) => {
 				if (showContextMenu) {
@@ -455,6 +496,32 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 					}
 				}
 
+				// Handle command mode with "!" key
+				if (event.key === "~"  && !isCommandMode && !isMemoryMode && inputValue === "") {
+					event.preventDefault()
+					setIsCommandMode(true)
+					return
+				}
+				
+				// Handle command mode with "!" key
+				if (event.key === "#"  && !isMemoryMode && !isCommandMode && inputValue === "") {
+					event.preventDefault()
+					setIsMemoryMode(true)
+					return
+				}
+
+				// Handle ESC key in command mode
+				if (event.key === "Escape" && (isCommandMode || isMemoryMode)) {
+					event.preventDefault()
+					if (inputValue === "") {
+						setIsCommandMode(false)
+						setIsMemoryMode(false)
+					} else {
+						setInputValue("")
+					}
+					return
+				}
+
 				const isComposing = event.nativeEvent?.isComposing ?? false
 
 				// Handle prompt history navigation using custom hook
@@ -466,8 +533,7 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 					event.preventDefault()
 
 					// Always call onSend - let ChatView handle queueing when disabled
-					resetHistoryNavigation()
-					onSend()
+					handleSend()
 				}
 
 				if (event.key === "Backspace" && !isComposing) {
@@ -515,7 +581,7 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 				}
 			},
 			[
-				onSend,
+				handleSend,
 				showContextMenu,
 				searchQuery,
 				selectedMenuIndex,
@@ -531,6 +597,10 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 				handleHistoryNavigation,
 				resetHistoryNavigation,
 				commands,
+				isCommandMode,
+				setIsCommandMode,
+				isMemoryMode,
+				setIsMemoryMode
 			],
 		)
 
@@ -1061,10 +1131,10 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 						"cursor-text",
 						isEditMode ? "pt-1.5 pb-10 px-2" : "py-1.5 px-2",
 						isFocused
-							? "border border-vscode-focusBorder outline outline-vscode-focusBorder"
-							: isDraggingOver
-								? "border-2 border-dashed border-vscode-focusBorder"
-								: "border border-transparent",
+								? "border outline"
+								: isDraggingOver
+									? "border border-dashed border-vscode-focusBorder"
+									: "border border-transparent",
 						isDraggingOver
 							? "bg-[color-mix(in_srgb,var(--vscode-input-background)_95%,var(--vscode-focusBorder))]"
 							: "bg-vscode-input-background",
@@ -1082,6 +1152,12 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 						"scrollbar-none",
 						"scrollbar-hide",
 					)}
+					style={{
+						...(isFocused && {
+							borderColor: isCommandMode ? '#ef4444' : isMemoryMode ? '#00a5b1ff':'var(--vscode-focusBorder)',
+							outlineColor: isCommandMode ? '#ef4444' : isMemoryMode ? '#00a5b1ff':'var(--vscode-focusBorder)',
+						}),
+					}}
 					onScroll={() => updateHighlights()}
 				/>
 
@@ -1113,7 +1189,7 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 							<button
 								aria-label={t("chat:sendMessage")}
 								disabled={false}
-								onClick={onSend}
+								onClick={handleSend}
 								className={cn(
 									"relative inline-flex items-center justify-center",
 									"bg-transparent border-none p-1.5",
@@ -1233,7 +1309,7 @@ const ChatTextArea = forwardRef<HTMLTextAreaElement, ChatTextAreaProps>(
 							customModes={customModes}
 							customModePrompts={customModePrompts}
 							onCancel={onCancel}
-							onSend={onSend}
+							onSend={handleSend}
 							onSelectImages={onSelectImages}
 							sendingDisabled={sendingDisabled}
 							shouldDisableImages={shouldDisableImages}
diff --git a/webview-ui/src/components/chat/ChatView.tsx b/webview-ui/src/components/chat/ChatView.tsx
index bc9c36a6..e06df740 100644
--- a/webview-ui/src/components/chat/ChatView.tsx
+++ b/webview-ui/src/components/chat/ChatView.tsx
@@ -178,6 +178,7 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 	const [wasStreaming, setWasStreaming] = useState<boolean>(false)
 	const [showCheckpointWarning, setShowCheckpointWarning] = useState<boolean>(false)
 	const [isCondensing, setIsCondensing] = useState<boolean>(false)
+	const [isSavingMemory, setIsSavingMemory] = useState<boolean>(false)
 	const [showAnnouncementModal, setShowAnnouncementModal] = useState(false)
 	const everVisibleMessagesTsRef = useRef<LRUCache<number, boolean>>(
 		new LRUCache({
@@ -363,6 +364,26 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 							setPrimaryButtonText(t("chat:approve.title"))
 							setSecondaryButtonText(t("chat:reject.title"))
 							break
+						case "web_search":
+							if (!isAutoApproved(lastMessage) && !isPartial) {
+								playSound("notification")
+							}
+							setSendingDisabled(isPartial)
+							setClineAsk("web_search")
+							setEnableButtons(!isPartial)
+							setPrimaryButtonText(t("chat:approve.title"))
+							setSecondaryButtonText(t("chat:reject.title"))
+							break
+						case "url_fetch":
+							if (!isAutoApproved(lastMessage) && !isPartial) {
+								playSound("notification")
+							}
+							setSendingDisabled(isPartial)
+							setClineAsk("url_fetch")
+							setEnableButtons(!isPartial)
+							setPrimaryButtonText(t("chat:approve.title"))
+							setSecondaryButtonText(t("chat:reject.title"))
+							break
 						case "completion_result":
 							// extension waiting for feedback. but we can just present a new task button
 							if (!isPartial) {
@@ -721,6 +742,8 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 				case "tool":
 				case "browser_action_launch":
 				case "use_mcp_server":
+				case "web_search":
+				case "url_fetch":
 				case "resume_task":
 				case "mistake_limit_reached":
 					// Only send text/images if they exist
@@ -778,6 +801,8 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 				case "tool":
 				case "browser_action_launch":
 				case "use_mcp_server":
+				case "web_search":
+				case "url_fetch":
 					// Only send text/images if they exist
 					if (trimmedInput || (images && images.length > 0)) {
 						vscode.postMessage({
@@ -866,6 +891,14 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 						setIsCondensing(false)
 					}
 					break
+				case "savedMemory":
+					if (message.success !== undefined) {
+						setIsSavingMemory(false)
+						if (sendingDisabled) {
+							setSendingDisabled(false)
+						}
+					}
+					break
 			}
 			// textAreaRef.current is not explicitly required here since React
 			// guarantees that ref will be stable across re-renders, and we're
@@ -1100,8 +1133,17 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 				return alwaysAllowMcp && isMcpToolAlwaysAllowed(message)
 			}
 
+			if (message.ask === "web_search") {
+				return alwaysAllowReadOnly
+			}
+
+			if (message.ask === "url_fetch") {
+				return alwaysAllowReadOnly
+			}
+
+			// 将 message.isProtected 字段作为 forceApproval 字段
 			if (message.ask === "command") {
-				return alwaysAllowExecute && isAllowedCommand(message)
+				return alwaysAllowExecute && isAllowedCommand(message) || message.isProtected
 			}
 
 			// For read/write operations, check if it's outside workspace and if
@@ -1303,8 +1345,18 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 			})
 		}
 
+		if (isSavingMemory) {
+			// Show indicator after clicking save memory button
+			result.push({
+				type: "say",
+				say: "save_memory",
+				ts: Date.now(),
+				partial: true,
+			})
+		}
+
 		return result
-	}, [isCondensing, visibleMessages])
+	}, [isCondensing, isSavingMemory, visibleMessages])
 
 	// scrolling
 
@@ -1808,7 +1860,7 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 						{telemetrySetting === "unset" && <TelemetryBanner />}
 
 						<div className="mb-2.5">
-							{cloudIsAuthenticated || taskHistory.length < 4 ? <RooTips /> : <RooCloudCTA />}
+							{cloudIsAuthenticated || tasks.length < 1 ? <RooTips /> : <RooCloudCTA />}
 						</div>
 						{/* Show the task history preview if expanded and tasks exist */}
 						{taskHistory.length > 0 && isExpanded && <HistoryPreview />}
@@ -1973,6 +2025,8 @@ const ChatViewComponent: React.ForwardRefRenderFunction<ChatViewRef, ChatViewPro
 				mode={mode}
 				setMode={setMode}
 				modeShortcutText={modeShortcutText}
+				isSavingMemory={isSavingMemory}
+				setIsSavingMemory={setIsSavingMemory}
 			/>
 
 			{isProfileDisabled && (
diff --git a/webview-ui/src/components/chat/CodeIndexPopover.tsx b/webview-ui/src/components/chat/CodeIndexPopover.tsx
index c85aaf6e..1de7d155 100644
--- a/webview-ui/src/components/chat/CodeIndexPopover.tsx
+++ b/webview-ui/src/components/chat/CodeIndexPopover.tsx
@@ -98,11 +98,11 @@ const createValidationSchema = (provider: EmbedderProvider, t: any) => {
 					.string()
 					.min(1, t("settings:codeIndex.validation.ollamaBaseUrlRequired"))
 					.url(t("settings:codeIndex.validation.invalidOllamaUrl")),
-				codebaseIndexEmbedderModelId: z.string().min(1, t("settings:codeIndex.validation.modelIdRequired")),
-				codebaseIndexEmbedderModelDimension: z
-					.number()
-					.min(1, t("settings:codeIndex.validation.modelDimensionRequired"))
-					.optional(),
+				// codebaseIndexEmbedderModelId: z.string().min(1, t("settings:codeIndex.validation.modelIdRequired")),
+				// codebaseIndexEmbedderModelDimension: z
+				// 	.number()
+				// 	.min(1, t("settings:codeIndex.validation.modelDimensionRequired"))
+				// 	.optional(),
 			})
 
 		case "openai-compatible":
@@ -147,7 +147,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 }) => {
 	const SECRET_PLACEHOLDER = "••••••••••••••••"
 	const { t } = useAppTranslation()
-	const { codebaseIndexConfig, codebaseIndexModels } = useExtensionState()
+	const { codebaseIndexConfig, codebaseIndexModels, cwd } = useExtensionState()
 	const [open, setOpen] = useState(false)
 	const [isAdvancedSettingsOpen, setIsAdvancedSettingsOpen] = useState(false)
 	const [isSetupSettingsOpen, setIsSetupSettingsOpen] = useState(false)
@@ -168,7 +168,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 	const getDefaultSettings = (): LocalCodeIndexSettings => ({
 		codebaseIndexEnabled: true,
 		codebaseIndexQdrantUrl: "",
-		codebaseIndexEmbedderProvider: "openai",
+		codebaseIndexEmbedderProvider: "openai-compatible",
 		codebaseIndexEmbedderBaseUrl: "",
 		codebaseIndexEmbedderModelId: "",
 		codebaseIndexEmbedderModelDimension: undefined,
@@ -199,7 +199,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 			const settings = {
 				codebaseIndexEnabled: codebaseIndexConfig.codebaseIndexEnabled ?? true,
 				codebaseIndexQdrantUrl: codebaseIndexConfig.codebaseIndexQdrantUrl || "",
-				codebaseIndexEmbedderProvider: codebaseIndexConfig.codebaseIndexEmbedderProvider || "openai",
+				codebaseIndexEmbedderProvider: codebaseIndexConfig.codebaseIndexEmbedderProvider || "openai-compatible",
 				codebaseIndexEmbedderBaseUrl: codebaseIndexConfig.codebaseIndexEmbedderBaseUrl || "",
 				codebaseIndexEmbedderModelId: codebaseIndexConfig.codebaseIndexEmbedderModelId || "",
 				codebaseIndexEmbedderModelDimension:
@@ -229,6 +229,18 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 			vscode.postMessage({ type: "requestIndexingStatus" })
 			vscode.postMessage({ type: "requestCodeIndexSecretStatus" })
 		}
+		const handleMessage = (event: MessageEvent) => {
+			if (event.data.type === "workspaceUpdated") {
+				// When workspace changes, request updated indexing status
+				if (open) {
+					vscode.postMessage({ type: "requestIndexingStatus" })
+					vscode.postMessage({ type: "requestCodeIndexSecretStatus" })
+				}
+			}
+		}
+
+		window.addEventListener("message", handleMessage)
+		return () => window.removeEventListener("message", handleMessage)
 	}, [open])
 
 	// Use a ref to capture current settings for the save handler
@@ -239,13 +251,15 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 	useEffect(() => {
 		const handleMessage = (event: MessageEvent<any>) => {
 			if (event.data.type === "indexingStatusUpdate") {
-				setIndexingStatus({
-					systemStatus: event.data.values.systemStatus,
-					message: event.data.values.message || "",
-					processedItems: event.data.values.processedItems,
-					totalItems: event.data.values.totalItems,
-					currentItemUnit: event.data.values.currentItemUnit || "items",
-				})
+				if (!event.data.values.workspacePath || event.data.values.workspacePath === cwd) {
+					setIndexingStatus({
+						systemStatus: event.data.values.systemStatus,
+						message: event.data.values.message || "",
+						processedItems: event.data.values.processedItems,
+						totalItems: event.data.values.totalItems,
+						currentItemUnit: event.data.values.currentItemUnit || "items",
+					})
+				}
 			} else if (event.data.type === "codeIndexSettingsSaved") {
 				if (event.data.success) {
 					setSaveStatus("saved")
@@ -273,7 +287,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 
 		window.addEventListener("message", handleMessage)
 		return () => window.removeEventListener("message", handleMessage)
-	}, [t])
+	}, [t, cwd])
 
 	// Listen for secret status
 	useEffect(() => {
@@ -613,21 +627,21 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 												<SelectValue />
 											</SelectTrigger>
 											<SelectContent>
-												<SelectItem value="openai">
-													{t("settings:codeIndex.openaiProvider")}
+												<SelectItem value="openai-compatible">
+													{t("settings:codeIndex.openaiCompatibleProvider")}
 												</SelectItem>
 												<SelectItem value="ollama">
-													{t("settings:codeIndex.ollamaProvider")}
+													{"Codebase-Service"}
 												</SelectItem>
-												<SelectItem value="openai-compatible">
-													{t("settings:codeIndex.openaiCompatibleProvider")}
+												{/* <SelectItem value="openai">
+													{t("settings:codeIndex.openaiProvider")}
 												</SelectItem>
 												<SelectItem value="gemini">
 													{t("settings:codeIndex.geminiProvider")}
 												</SelectItem>
 												<SelectItem value="mistral">
 													{t("settings:codeIndex.mistralProvider")}
-												</SelectItem>
+												</SelectItem> */}
 											</SelectContent>
 										</Select>
 									</div>
@@ -702,7 +716,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 										<>
 											<div className="space-y-2">
 												<label className="text-sm font-medium">
-													{t("settings:codeIndex.ollamaBaseUrlLabel")}
+													{"Codebase-Service URL"}
 												</label>
 												<VSCodeTextField
 													value={currentSettings.codebaseIndexEmbedderBaseUrl || ""}
@@ -731,7 +745,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 												)}
 											</div>
 
-											<div className="space-y-2">
+											{/* <div className="space-y-2">
 												<label className="text-sm font-medium">
 													{t("settings:codeIndex.modelLabel")}
 												</label>
@@ -778,7 +792,7 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 														{formErrors.codebaseIndexEmbedderModelDimension}
 													</p>
 												)}
-											</div>
+											</div> */}
 										</>
 									)}
 
@@ -1021,6 +1035,8 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 									)}
 
 									{/* Qdrant Settings */}
+									{currentSettings.codebaseIndexEmbedderProvider !== "ollama" && (
+										<>
 									<div className="space-y-2">
 										<label className="text-sm font-medium">
 											{t("settings:codeIndex.qdrantUrlLabel")}
@@ -1068,6 +1084,8 @@ export const CodeIndexPopover: React.FC<CodeIndexPopoverProps> = ({
 											</p>
 										)}
 									</div>
+									</>
+									)}
 								</div>
 							)}
 						</div>
diff --git a/webview-ui/src/components/chat/CommandExecution.tsx b/webview-ui/src/components/chat/CommandExecution.tsx
index 23d60a7a..cf25b1d9 100644
--- a/webview-ui/src/components/chat/CommandExecution.tsx
+++ b/webview-ui/src/components/chat/CommandExecution.tsx
@@ -211,9 +211,15 @@ const OutputContainerInternal = ({ isExpanded, output }: { isExpanded: boolean;
 	<div
 		className={cn("overflow-hidden", {
 			"max-h-0": !isExpanded,
-			"max-h-[100%] mt-1 pt-1 border-t border-border/25": isExpanded,
+			"mt-1 pt-1 border-t border-border/25": isExpanded,
 		})}>
-		{output.length > 0 && <CodeBlock source={output} language="log" />}
+		{output.length > 0 && (
+			<CodeBlock 
+				source={output} 
+				language="log" 
+				preStyle={{ overflowY: 'auto', maxHeight: '300px' }}
+			/>
+		)}
 	</div>
 )
 
diff --git a/webview-ui/src/components/chat/ContextMenu.tsx b/webview-ui/src/components/chat/ContextMenu.tsx
index 86965fcb..0ba83b4b 100644
--- a/webview-ui/src/components/chat/ContextMenu.tsx
+++ b/webview-ui/src/components/chat/ContextMenu.tsx
@@ -271,7 +271,7 @@ const ContextMenu: React.FC<ContextMenuProps> = ({
 					zIndex: 1000,
 					display: "flex",
 					flexDirection: "column",
-					maxHeight: "300px",
+					maxHeight: "405px", // 增加可以显示更多选项
 					overflowY: "auto",
 					overflowX: "hidden",
 				}}>
diff --git a/webview-ui/src/components/common/CodeAccordian.tsx b/webview-ui/src/components/common/CodeAccordian.tsx
index 7dcef11e..73f6ed51 100644
--- a/webview-ui/src/components/common/CodeAccordian.tsx
+++ b/webview-ui/src/components/common/CodeAccordian.tsx
@@ -35,6 +35,7 @@ const CodeAccordian = ({
 	const inferredLanguage = useMemo(() => language ?? (path ? getLanguageFromPath(path) : "txt"), [path, language])
 	const source = useMemo(() => code.trim(), [code])
 	const hasHeader = Boolean(path || isFeedback || header)
+	const isAgentEdits = Boolean(source.startsWith('# agentEdits'))
 
 	return (
 		<ToolUseBlock>
@@ -48,9 +49,9 @@ const CodeAccordian = ({
 						</div>
 					) : isFeedback ? (
 						<div className="flex items-center">
-							<span className={`codicon codicon-${isFeedback ? "feedback" : "codicon-output"} mr-1.5`} />
+							<span className={`codicon codicon-${isAgentEdits ? "hubot" : isFeedback ? "feedback" : "output"} mr-1.5`} />
 							<span className="whitespace-nowrap overflow-hidden text-ellipsis mr-2 rtl">
-								{isFeedback ? "User Edits" : "Console Logs"}
+								{isAgentEdits ? "Roo Edits" : isFeedback ? "User Edits" : "Console Logs"}
 							</span>
 						</div>
 					) : (
diff --git a/webview-ui/src/components/common/CodeBlock.tsx b/webview-ui/src/components/common/CodeBlock.tsx
index 28492acd..458fa3c2 100644
--- a/webview-ui/src/components/common/CodeBlock.tsx
+++ b/webview-ui/src/components/common/CodeBlock.tsx
@@ -145,7 +145,16 @@ export const StyledPre = styled.div<{
 		word-break: ${({ wordwrap }) => (wordwrap === "false" ? "normal" : "normal")};
 		overflow-wrap: ${({ wordwrap }) => (wordwrap === "false" ? "normal" : "break-word")};
 		font-size: var(--vscode-editor-font-size, var(--vscode-font-size, 12px));
-		font-family: var(--vscode-editor-font-family);
+		font-family: 'JetBrains Mono', 'Fira Code', Consolas, 'Courier New', monospace;
+    
+		@font-face {
+			font-family: 'code-chinese';
+			src: local('Microsoft YaHei'), local('PingFang SC'), local('SimHei');
+			unicode-range: U+4E00-9FFF, U+3400-4DBF, U+20000-2A6DF, U+2A700-2B73F, U+2B740-2B81F, U+2B820-2CEAF;
+			size-adjust: 90%;
+		}
+		
+		font-family: 'JetBrains Mono', 'Fira Code', Consolas, 'code-chinese', 'Courier New', monospace, var(--vscode-font-family);
 	}
 
 	pre > code {
diff --git a/webview-ui/src/components/common/MarkdownBlock.tsx b/webview-ui/src/components/common/MarkdownBlock.tsx
index cae609d9..57bf7bf7 100644
--- a/webview-ui/src/components/common/MarkdownBlock.tsx
+++ b/webview-ui/src/components/common/MarkdownBlock.tsx
@@ -17,7 +17,16 @@ interface MarkdownBlockProps {
 
 const StyledMarkdown = styled.div`
 	code:not(pre > code) {
-		font-family: var(--vscode-editor-font-family, monospace);
+		font-family: 'JetBrains Mono', 'Fira Code', Consolas, 'Courier New', monospace;
+	   
+		@font-face {
+			font-family: 'code-chinese';
+			src: local('Microsoft YaHei'), local('PingFang SC'), local('SimHei');
+			unicode-range: U+4E00-9FFF, U+3400-4DBF, U+20000-2A6DF, U+2A700-2B73F, U+2B740-2B81F, U+2B820-2CEAF;
+			size-adjust: 90%;
+		}
+		
+		font-family: 'JetBrains Mono', 'Fira Code', Consolas, 'code-chinese', 'Courier New', monospace, var(--vscode-font-family);
 		filter: saturation(110%) brightness(95%);
 		color: var(--vscode-textPreformat-foreground) !important;
 		background-color: var(--vscode-textPreformat-background) !important;
@@ -201,12 +210,12 @@ const MarkdownBlock = memo(({ markdown }: MarkdownBlockProps) => {
 					if (!isLocalPath) {
 						return
 					}
-
+					console.log("Requesting to open file:", href, children)
 					e.preventDefault()
 
 					// Handle absolute vs project-relative paths
 					let filePath = href.replace("file://", "")
-
+					
 					// Extract line number if present
 					const match = filePath.match(/(.*):(\d+)(-\d+)?$/)
 					let values = undefined
@@ -214,12 +223,12 @@ const MarkdownBlock = memo(({ markdown }: MarkdownBlockProps) => {
 						filePath = match[1]
 						values = { line: parseInt(match[2]) }
 					}
-
+					console.log("Requesting to open file:", filePath, values)
 					// Add ./ prefix if needed
 					if (!filePath.startsWith("/") && !filePath.startsWith("./")) {
 						filePath = "./" + filePath
 					}
-
+					console.log("Requesting to open file:", filePath, values)
 					vscode.postMessage({
 						type: "openFile",
 						text: filePath,
diff --git a/webview-ui/src/components/settings/ApiOptions.tsx b/webview-ui/src/components/settings/ApiOptions.tsx
index 5b9d90b3..4c5994be 100644
--- a/webview-ui/src/components/settings/ApiOptions.tsx
+++ b/webview-ui/src/components/settings/ApiOptions.tsx
@@ -19,6 +19,7 @@ import {
 	claudeCodeDefaultModelId,
 	geminiDefaultModelId,
 	deepSeekDefaultModelId,
+	modelScopeDefaultModelId,
 	moonshotDefaultModelId,
 	mistralDefaultModelId,
 	xaiDefaultModelId,
@@ -58,6 +59,7 @@ import {
 	Chutes,
 	ClaudeCode,
 	DeepSeek,
+	ModelScope,
 	Doubao,
 	Gemini,
 	Glama,
@@ -294,6 +296,7 @@ const ApiOptions = ({
 				"openai-native": { field: "apiModelId", default: openAiNativeDefaultModelId },
 				gemini: { field: "apiModelId", default: geminiDefaultModelId },
 				deepseek: { field: "apiModelId", default: deepSeekDefaultModelId },
+				modelscope: { field: "apiModelId", default: modelScopeDefaultModelId },
 				doubao: { field: "apiModelId", default: doubaoDefaultModelId },
 				moonshot: { field: "apiModelId", default: moonshotDefaultModelId },
 				mistral: { field: "apiModelId", default: mistralDefaultModelId },
@@ -474,6 +477,10 @@ const ApiOptions = ({
 				<LMStudio apiConfiguration={apiConfiguration} setApiConfigurationField={setApiConfigurationField} />
 			)}
 
+			{selectedProvider === "modelscope" && (
+				<ModelScope apiConfiguration={apiConfiguration} setApiConfigurationField={setApiConfigurationField} />
+			)}
+
 			{selectedProvider === "deepseek" && (
 				<DeepSeek apiConfiguration={apiConfiguration} setApiConfigurationField={setApiConfigurationField} />
 			)}
diff --git a/webview-ui/src/components/settings/AutoApproveToggle.tsx b/webview-ui/src/components/settings/AutoApproveToggle.tsx
index e8b51b01..6f44b241 100644
--- a/webview-ui/src/components/settings/AutoApproveToggle.tsx
+++ b/webview-ui/src/components/settings/AutoApproveToggle.tsx
@@ -109,13 +109,7 @@ export const AutoApproveToggle = ({ onToggle, ...props }: AutoApproveToggleProps
 	const { t } = useAppTranslation()
 
 	return (
-		<div
-			className={cn(
-				"flex flex-row flex-wrap justify-center gap-2 max-w-[600px] mx-auto my-2 ",
-				"[@media(min-width:600px)]:gap-4",
-				"[@media(min-width:800px)]:max-w-[900px]",
-				"[@media(min-width:1200px)]:max-w-[1800px]",
-			)}>
+		<div className={cn("flex flex-row flex-wrap gap-2 py-2")}>
 			{Object.values(autoApproveSettingsConfig).map(({ key, descriptionKey, labelKey, icon, testId }) => (
 				<StandardTooltip key={key} content={t(descriptionKey || "")}>
 					<Button
@@ -124,14 +118,16 @@ export const AutoApproveToggle = ({ onToggle, ...props }: AutoApproveToggleProps
 						aria-label={t(labelKey)}
 						aria-pressed={!!props[key]}
 						data-testid={testId}
-						className={cn(" aspect-square h-[80px]", !props[key] && "opacity-50")}>
-						<span className={cn("flex flex-col items-center gap-1")}>
-							<span className={`codicon codicon-${icon}`} />
-							<span className="text-sm text-center">{t(labelKey)}</span>
-						</span>
+						className={cn(
+							"h-7 px-2 rounded-md flex items-center gap-1.5 text-xs whitespace-nowrap",
+							!props[key] && "opacity-50",
+						)}>
+						<span className={`codicon codicon-${icon} text-sm`} />
+						<span>{t(labelKey)}</span>
 					</Button>
 				</StandardTooltip>
 			))}
 		</div>
 	)
 }
+
diff --git a/webview-ui/src/components/settings/ExperimentalSettings.tsx b/webview-ui/src/components/settings/ExperimentalSettings.tsx
index 53801232..9d2558ec 100644
--- a/webview-ui/src/components/settings/ExperimentalSettings.tsx
+++ b/webview-ui/src/components/settings/ExperimentalSettings.tsx
@@ -39,29 +39,15 @@ export const ExperimentalSettings = ({
 				{Object.entries(experimentConfigsMap)
 					.filter(([key]) => key in EXPERIMENT_IDS)
 					.map((config) => {
-						if (config[0] === "MULTI_FILE_APPLY_DIFF") {
-							return (
-								<ExperimentalFeature
-									key={config[0]}
-									experimentKey={config[0]}
-									enabled={experiments[EXPERIMENT_IDS.MULTI_FILE_APPLY_DIFF] ?? false}
-									onChange={(enabled) =>
-										setExperimentEnabled(EXPERIMENT_IDS.MULTI_FILE_APPLY_DIFF, enabled)
-									}
-								/>
-							)
-						}
+						const experimentKey = config[0] as keyof typeof EXPERIMENT_IDS;
+						const experimentId = EXPERIMENT_IDS[experimentKey];
+						
 						return (
 							<ExperimentalFeature
-								key={config[0]}
-								experimentKey={config[0]}
-								enabled={experiments[EXPERIMENT_IDS[config[0] as keyof typeof EXPERIMENT_IDS]] ?? false}
-								onChange={(enabled) =>
-									setExperimentEnabled(
-										EXPERIMENT_IDS[config[0] as keyof typeof EXPERIMENT_IDS],
-										enabled,
-									)
-								}
+								key={experimentKey}
+								experimentKey={experimentKey}
+								enabled={experiments[experimentId] ?? false}
+								onChange={(enabled) => setExperimentEnabled(experimentId, enabled)}
 							/>
 						)
 					})}
diff --git a/webview-ui/src/components/settings/SettingsView.tsx b/webview-ui/src/components/settings/SettingsView.tsx
index 9cfd9b64..71cf6e5e 100644
--- a/webview-ui/src/components/settings/SettingsView.tsx
+++ b/webview-ui/src/components/settings/SettingsView.tsx
@@ -226,6 +226,14 @@ const SettingsView = forwardRef<SettingsViewRef, SettingsViewProps>(({ onDone, t
 
 				const previousValue = prevState.apiConfiguration?.[field]
 
+				if (Object.keys(previousValue || {}).length === 0 && Object.keys(value || {}).length === 0) {
+					return prevState
+				}
+
+				if (value === "__undefined__") {
+					return prevState
+				}
+
 				// Don't treat initial sync from undefined to a defined value as a user change
 				// This prevents the dirty state when the component initializes and auto-syncs the model ID
 				const isInitialSync = previousValue === undefined && value !== undefined
diff --git a/webview-ui/src/components/settings/constants.ts b/webview-ui/src/components/settings/constants.ts
index b8aa84cb..a6e08354 100644
--- a/webview-ui/src/components/settings/constants.ts
+++ b/webview-ui/src/components/settings/constants.ts
@@ -5,6 +5,7 @@ import {
 	bedrockModels,
 	claudeCodeModels,
 	deepSeekModels,
+	modelScopeModels,
 	moonshotModels,
 	geminiModels,
 	mistralModels,
@@ -22,7 +23,7 @@ export const MODELS_BY_PROVIDER: Partial<Record<ProviderName, Record<string, Mod
 	"claude-code": claudeCodeModels,
 	bedrock: bedrockModels,
 	deepseek: deepSeekModels,
-	doubao: doubaoModels,
+	modelscope: modelScopeModels,
 	moonshot: moonshotModels,
 	gemini: geminiModels,
 	mistral: mistralModels,
@@ -36,28 +37,58 @@ export const MODELS_BY_PROVIDER: Partial<Record<ProviderName, Record<string, Mod
 
 export const PROVIDERS = [
 	{ value: "openrouter", label: "OpenRouter" },
-	{ value: "anthropic", label: "Anthropic" },
-	{ value: "claude-code", label: "Claude Code" },
+	// { value: "anthropic", label: "Anthropic" },
+	// { value: "claude-code", label: "Claude Code" },
 	{ value: "gemini", label: "Google Gemini" },
-	{ value: "doubao", label: "Doubao" },
+	// { value: "doubao", label: "Doubao" },
 	{ value: "deepseek", label: "DeepSeek" },
-	{ value: "moonshot", label: "Moonshot" },
+	// { value: "moonshot", label: "Moonshot" },
 	{ value: "openai-native", label: "OpenAI" },
 	{ value: "openai", label: "OpenAI Compatible" },
-	{ value: "vertex", label: "GCP Vertex AI" },
-	{ value: "bedrock", label: "Amazon Bedrock" },
-	{ value: "glama", label: "Glama" },
-	{ value: "vscode-lm", label: "VS Code LM API" },
-	{ value: "mistral", label: "Mistral" },
-	{ value: "lmstudio", label: "LM Studio" },
-	{ value: "ollama", label: "Ollama" },
-	{ value: "unbound", label: "Unbound" },
-	{ value: "requesty", label: "Requesty" },
-	{ value: "human-relay", label: "Human Relay" },
-	{ value: "xai", label: "xAI (Grok)" },
-	{ value: "groq", label: "Groq" },
-	{ value: "huggingface", label: "Hugging Face" },
-	{ value: "chutes", label: "Chutes AI" },
-	{ value: "litellm", label: "LiteLLM" },
-	{ value: "sambanova", label: "SambaNova" },
+	// { value: "vertex", label: "GCP Vertex AI" },
+	// { value: "bedrock", label: "Amazon Bedrock" },
+	// { value: "glama", label: "Glama" },
+	// { value: "vscode-lm", label: "VS Code LM API" },
+	// { value: "mistral", label: "Mistral" },
+	// { value: "lmstudio", label: "LM Studio" },
+	// { value: "ollama", label: "Ollama" },
+	// { value: "unbound", label: "Unbound" },
+	// { value: "requesty", label: "Requesty" },
+	// { value: "human-relay", label: "Human Relay" },
+	// { value: "xai", label: "xAI (Grok)" },
+	// { value: "groq", label: "Groq" },
+	// { value: "huggingface", label: "Hugging Face" },
+	// { value: "chutes", label: "Chutes AI" },
+	// { value: "litellm", label: "LiteLLM" },
+	// { value: "sambanova", label: "SambaNova" },
+	{ value: "modelscope", label: "ModelScope" },
 ].sort((a, b) => a.label.localeCompare(b.label))
+
+// export const PROVIDERS = [
+// 	// { value: "openrouter", label: "OpenRouter" },
+// 	// { value: "anthropic", label: "Anthropic" },
+// 	// { value: "claude-code", label: "Claude Code" },
+// 	// { value: "gemini", label: "Google Gemini" },
+// 	// { value: "doubao", label: "Doubao" },
+// 	// { value: "deepseek", label: "DeepSeek" },
+// 	// { value: "moonshot", label: "Moonshot" },
+// 	// { value: "openai-native", label: "OpenAI" },
+// 	{ value: "openai", label: "OpenAI Compatible" },
+// 	// { value: "vertex", label: "GCP Vertex AI" },
+// 	// { value: "bedrock", label: "Amazon Bedrock" },
+// 	// { value: "glama", label: "Glama" },
+// 	// { value: "vscode-lm", label: "VS Code LM API" },
+// 	// { value: "mistral", label: "Mistral" },
+// 	// { value: "lmstudio", label: "LM Studio" },
+// 	// { value: "ollama", label: "Ollama" },
+// 	// { value: "unbound", label: "Unbound" },
+// 	// { value: "requesty", label: "Requesty" },
+// 	// { value: "human-relay", label: "Human Relay" },
+// 	// { value: "xai", label: "xAI (Grok)" },
+// 	// { value: "groq", label: "Groq" },
+// 	// { value: "huggingface", label: "Hugging Face" },
+// 	// { value: "chutes", label: "Chutes AI" },
+// 	// { value: "litellm", label: "LiteLLM" },
+// 	// { value: "sambanova", label: "SambaNova" },
+// 	// { value: "modelscope", label: "ModelScope" },
+// ].sort((a, b) => a.label.localeCompare(b.label))
diff --git a/webview-ui/src/components/settings/providers/index.ts b/webview-ui/src/components/settings/providers/index.ts
index 13420b26..dd730dbf 100644
--- a/webview-ui/src/components/settings/providers/index.ts
+++ b/webview-ui/src/components/settings/providers/index.ts
@@ -9,6 +9,7 @@ export { Glama } from "./Glama"
 export { Groq } from "./Groq"
 export { HuggingFace } from "./HuggingFace"
 export { LMStudio } from "./LMStudio"
+export { ModelScope } from "./ModelScope"
 export { Mistral } from "./Mistral"
 export { Moonshot } from "./Moonshot"
 export { Ollama } from "./Ollama"
diff --git a/webview-ui/src/components/ui/hooks/useOpenRouterModelProviders.ts b/webview-ui/src/components/ui/hooks/useOpenRouterModelProviders.ts
index dc50c0f6..0c9ad9a7 100644
--- a/webview-ui/src/components/ui/hooks/useOpenRouterModelProviders.ts
+++ b/webview-ui/src/components/ui/hooks/useOpenRouterModelProviders.ts
@@ -43,7 +43,7 @@ async function getOpenRouterProvidersForModel(modelId: string) {
 	const models: Record<string, OpenRouterModelProvider> = {}
 
 	try {
-		const response = await axios.get(`https://openrouter.ai/api/v1/models/${modelId}/endpoints`)
+		const response = await axios.get(`https://riddler.mynatapp.cc/llm/openrouter/v1/models/${modelId}/endpoints`)
 		const result = openRouterEndpointsSchema.safeParse(response.data)
 
 		if (!result.success) {
diff --git a/webview-ui/src/components/ui/hooks/useSelectedModel.ts b/webview-ui/src/components/ui/hooks/useSelectedModel.ts
index 6bda83ab..e4a3f77f 100644
--- a/webview-ui/src/components/ui/hooks/useSelectedModel.ts
+++ b/webview-ui/src/components/ui/hooks/useSelectedModel.ts
@@ -8,6 +8,8 @@ import {
 	bedrockModels,
 	deepSeekDefaultModelId,
 	deepSeekModels,
+	modelScopeDefaultModelId,
+	modelScopeModels,
 	moonshotDefaultModelId,
 	moonshotModels,
 	geminiDefaultModelId,
@@ -62,7 +64,7 @@ export const useSelectedModel = (apiConfiguration?: ProviderSettings) => {
 					routerModels: routerModels.data,
 					openRouterModelProviders: openRouterModelProviders.data,
 				})
-			: { id: anthropicDefaultModelId, info: undefined }
+			: { id: "__undefined__", info: undefined }
 
 	return {
 		provider,
@@ -178,6 +180,11 @@ function getSelectedModel({
 			const info = deepSeekModels[id as keyof typeof deepSeekModels]
 			return { id, info }
 		}
+		case "modelscope": {
+			const id = apiConfiguration.apiModelId ?? modelScopeDefaultModelId
+			const info = modelScopeModels[id as keyof typeof modelScopeModels]
+			return { id, info }
+		}
 		case "doubao": {
 			const id = apiConfiguration.apiModelId ?? doubaoDefaultModelId
 			const info = doubaoModels[id as keyof typeof doubaoModels]
diff --git a/webview-ui/src/i18n/locales/ca/settings.json b/webview-ui/src/i18n/locales/ca/settings.json
index 3da1f5e5..add8b356 100644
--- a/webview-ui/src/i18n/locales/ca/settings.json
+++ b/webview-ui/src/i18n/locales/ca/settings.json
@@ -677,6 +677,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Edició en segon pla",
 			"description": "Quan s'activa, evita la interrupció del focus de l'editor. Les edicions de fitxers es produeixen en segon pla sense obrir la vista diff o robar el focus. Pots continuar treballant sense interrupcions mentre Roo fa canvis. Els fitxers poden obrir-se sense focus per capturar diagnòstics o romandre completament tancats."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Permetre múltiples crides d'eines per missatge",
+			"description": "Quan està activat, Roo pot utilitzar múltiples eines en un sol missatge. Quan està desactivat, Roo ha d'utilitzar una eina per missatge. Activar això pot fer que les interaccions siguin més ràpides, però pot causar comportaments inesperats amb alguns models."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/de/settings.json b/webview-ui/src/i18n/locales/de/settings.json
index a96b41f0..9b4647a4 100644
--- a/webview-ui/src/i18n/locales/de/settings.json
+++ b/webview-ui/src/i18n/locales/de/settings.json
@@ -677,6 +677,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Hintergrundbearbeitung",
 			"description": "Verhindert Editor-Fokus-Störungen wenn aktiviert. Dateibearbeitungen erfolgen im Hintergrund ohne Öffnung von Diff-Ansichten oder Fokus-Diebstahl. Du kannst ungestört weiterarbeiten, während Roo Änderungen vornimmt. Dateien können ohne Fokus geöffnet werden, um Diagnosen zu erfassen oder vollständig geschlossen bleiben."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Mehrere Tool-Aufrufe pro Nachricht erlauben",
+			"description": "Wenn aktiviert, kann Roo mehrere Tools in einer einzigen Nachricht verwenden. Wenn deaktiviert, muss Roo ein Tool pro Nachricht verwenden. Das Aktivieren kann die Interaktionen beschleunigen, aber bei einigen Modellen zu unerwartetem Verhalten führen."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/en/settings.json b/webview-ui/src/i18n/locales/en/settings.json
index 5f67268b..58aa4201 100644
--- a/webview-ui/src/i18n/locales/en/settings.json
+++ b/webview-ui/src/i18n/locales/en/settings.json
@@ -676,6 +676,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Background editing",
 			"description": "Prevent editor focus disruption when enabled. File edits happen in the background without opening diff views or stealing focus. You can continue working uninterrupted while Roo makes changes. Files can be opened without focus to capture diagnostics or kept closed entirely."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Allow multiple tool calls per message",
+			"description": "When enabled, Roo can use multiple tools in a single message. When disabled, Roo must use one tool per message. Enabling this can make interactions faster but may cause unexpected behavior with some models."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/es/settings.json b/webview-ui/src/i18n/locales/es/settings.json
index c4c7fb39..0f69497e 100644
--- a/webview-ui/src/i18n/locales/es/settings.json
+++ b/webview-ui/src/i18n/locales/es/settings.json
@@ -677,6 +677,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Edición en segundo plano",
 			"description": "Previene la interrupción del foco del editor cuando está habilitado. Las ediciones de archivos ocurren en segundo plano sin abrir vistas de diferencias o robar el foco. Puedes continuar trabajando sin interrupciones mientras Roo realiza cambios. Los archivos pueden abrirse sin foco para capturar diagnósticos o mantenerse completamente cerrados."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Permitir múltiples llamadas a herramientas por mensaje",
+			"description": "Cuando está habilitado, Roo puede usar múltiples herramientas en un solo mensaje. Cuando está deshabilitado, Roo debe usar una herramienta por mensaje. Habilitar esto puede hacer que las interacciones sean más rápidas pero puede causar comportamientos inesperados con algunos modelos."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/fr/settings.json b/webview-ui/src/i18n/locales/fr/settings.json
index e00b0c05..01a863af 100644
--- a/webview-ui/src/i18n/locales/fr/settings.json
+++ b/webview-ui/src/i18n/locales/fr/settings.json
@@ -677,6 +677,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Édition en arrière-plan",
 			"description": "Empêche la perturbation du focus de l'éditeur lorsqu'activé. Les modifications de fichiers se font en arrière-plan sans ouvrir de vues de différences ou voler le focus. Vous pouvez continuer à travailler sans interruption pendant que Roo effectue des changements. Les fichiers peuvent être ouverts sans focus pour capturer les diagnostics ou rester complètement fermés."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Autoriser plusieurs appels d'outils par message",
+			"description": "Lorsque cette option est activée, Roo peut utiliser plusieurs outils dans un seul message. Lorsque désactivé, Roo doit utiliser un outil par message. Activer cette option peut accélérer les interactions mais peut provoquer un comportement inattendu avec certains modèles."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/hi/settings.json b/webview-ui/src/i18n/locales/hi/settings.json
index 2497ffe6..395b6b6f 100644
--- a/webview-ui/src/i18n/locales/hi/settings.json
+++ b/webview-ui/src/i18n/locales/hi/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "बैकग्राउंड संपादन",
 			"description": "सक्षम होने पर एडिटर फोकस व्यवधान को रोकता है। फ़ाइल संपादन diff व्यू खोले बिना या फोकस चुराए बिना बैकग्राउंड में होता है। आप Roo के बदलाव करते समय बिना किसी बाधा के काम जारी रख सकते हैं। फ़ाइलें डायग्नोस्टिक्स कैप्चर करने के लिए बिना फोकस के खुल सकती हैं या पूरी तरह बंद रह सकती हैं।"
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "प्रति संदेश कई उपकरण कॉल की अनुमति दें",
+			"description": "सक्षम होने पर, Roo एक ही संदेश में कई उपकरणों का उपयोग कर सकता है। अक्षम होने पर, Roo को प्रति संदेश एक उपकरण का उपयोग करना होगा। इसे सक्षम करने से इंटरैक्शन तेज़ हो सकते हैं लेकिन कुछ मॉडल के साथ अप्रत्याशित व्यवहार हो सकता है।"
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/id/settings.json b/webview-ui/src/i18n/locales/id/settings.json
index 3665c99c..3271eb96 100644
--- a/webview-ui/src/i18n/locales/id/settings.json
+++ b/webview-ui/src/i18n/locales/id/settings.json
@@ -707,6 +707,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Pengeditan Latar Belakang",
 			"description": "Ketika diaktifkan, mencegah gangguan fokus editor. Pengeditan file terjadi di latar belakang tanpa membuka tampilan diff atau mencuri fokus. Anda dapat terus bekerja tanpa gangguan saat Roo melakukan perubahan. File mungkin dibuka tanpa fokus untuk menangkap diagnostik atau tetap tertutup sepenuhnya."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Izinkan beberapa panggilan alat per pesan",
+			"description": "Ketika diaktifkan, Roo dapat menggunakan beberapa alat dalam satu pesan. Ketika dinonaktifkan, Roo harus menggunakan satu alat per pesan. Mengaktifkan ini dapat mempercepat interaksi tetapi dapat menyebabkan perilaku yang tidak terduga dengan beberapa model."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/it/settings.json b/webview-ui/src/i18n/locales/it/settings.json
index 056b0f91..553d8436 100644
--- a/webview-ui/src/i18n/locales/it/settings.json
+++ b/webview-ui/src/i18n/locales/it/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Modifica in background",
 			"description": "Previene l'interruzione del focus dell'editor quando abilitato. Le modifiche ai file avvengono in background senza aprire viste di differenze o rubare il focus. Puoi continuare a lavorare senza interruzioni mentre Roo effettua modifiche. I file possono essere aperti senza focus per catturare diagnostiche o rimanere completamente chiusi."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Consenti chiamate multiple di strumenti per messaggio",
+			"description": "Quando abilitato, Roo può utilizzare più strumenti in un unico messaggio. Quando disabilitato, Roo deve utilizzare uno strumento per messaggio. Abilitare questa opzione può rendere le interazioni più veloci, ma può causare comportamenti imprevisti con alcuni modelli."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/ja/settings.json b/webview-ui/src/i18n/locales/ja/settings.json
index 3b38277b..ea3a4c61 100644
--- a/webview-ui/src/i18n/locales/ja/settings.json
+++ b/webview-ui/src/i18n/locales/ja/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "バックグラウンド編集",
 			"description": "有効にすると、エディターのフォーカス中断を防ぎます。ファイル編集は差分ビューを開いたりフォーカスを奪ったりすることなく、バックグラウンドで行われます。Rooが変更を行っている間も中断されることなく作業を続けることができます。ファイルは診断をキャプチャするためにフォーカスなしで開くか、完全に閉じたままにできます。"
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "メッセージごとに複数のツール呼び出しを許可",
+			"description": "有効にすると、Rooは単一のメッセージで複数のツールを使用できます。無効にすると、Rooはメッセージごとに1つのツールを使用する必要があります。これを有効にすることでインタラクションが高速化されますが、一部のモデルでは予期しない動作が発生する可能性があります。"
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/ko/settings.json b/webview-ui/src/i18n/locales/ko/settings.json
index 89739f4c..cdc2387e 100644
--- a/webview-ui/src/i18n/locales/ko/settings.json
+++ b/webview-ui/src/i18n/locales/ko/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "백그라운드 편집",
 			"description": "활성화하면 편집기 포커스 방해를 방지합니다. 파일 편집이 diff 뷰를 열거나 포커스를 빼앗지 않고 백그라운드에서 수행됩니다. Roo가 변경사항을 적용하는 동안 방해받지 않고 계속 작업할 수 있습니다. 파일은 진단을 캡처하기 위해 포커스 없이 열거나 완전히 닫힌 상태로 유지할 수 있습니다."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "메시지당 여러 도구 호출 허용",
+			"description": "활성화하면 Roo가 단일 메시지에서 여러 도구를 사용할 수 있습니다. 비활성화하면 Roo는 메시지당 하나의 도구만 사용해야 합니다. 이를 활성화하면 상호작용이 빨라지지만 일부 모델에서는 예기치 않은 동작이 발생할 수 있습니다."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/nl/settings.json b/webview-ui/src/i18n/locales/nl/settings.json
index 7d8721ff..00084a18 100644
--- a/webview-ui/src/i18n/locales/nl/settings.json
+++ b/webview-ui/src/i18n/locales/nl/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Achtergrondbewerking",
 			"description": "Voorkomt editor focus verstoring wanneer ingeschakeld. Bestandsbewerkingen gebeuren op de achtergrond zonder diff-weergaven te openen of focus te stelen. Je kunt ononderbroken doorwerken terwijl Roo wijzigingen aanbrengt. Bestanden kunnen zonder focus worden geopend om diagnostiek vast te leggen of volledig gesloten blijven."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Meerdere tool-aanroepen per bericht toestaan",
+			"description": "Indien ingeschakeld, kan Roo meerdere tools in één enkel bericht gebruiken. Indien uitgeschakeld, moet Roo één tool per bericht gebruiken. Het inschakelen hiervan kan interacties sneller maken, maar kan onverwacht gedrag veroorzaken met sommige modellen."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/pl/settings.json b/webview-ui/src/i18n/locales/pl/settings.json
index 5a23d213..5ac09310 100644
--- a/webview-ui/src/i18n/locales/pl/settings.json
+++ b/webview-ui/src/i18n/locales/pl/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Edycja w tle",
 			"description": "Zapobiega zakłócaniu fokusa edytora gdy włączone. Edycje plików odbywają się w tle bez otwierania widoków różnic lub kradzieży fokusa. Możesz kontynuować pracę bez przeszkód podczas gdy Roo wprowadza zmiany. Pliki mogą być otwierane bez fokusa aby przechwycić diagnostykę lub pozostać całkowicie zamknięte."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Zezwalaj na wiele wywołań narzędzi na wiadomość",
+			"description": "Po włączeniu, Roo może używać wielu narzędzi w jednej wiadomości. Po wyłączeniu, Roo musi używać jednego narzędzia na wiadomość. Włączenie tej opcji może przyspieszyć interakcje, ale może powodować nieoczekiwane zachowania z niektórymi modelami."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/pt-BR/settings.json b/webview-ui/src/i18n/locales/pt-BR/settings.json
index 2e39982d..53fd9d43 100644
--- a/webview-ui/src/i18n/locales/pt-BR/settings.json
+++ b/webview-ui/src/i18n/locales/pt-BR/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Edição em segundo plano",
 			"description": "Previne a interrupção do foco do editor quando habilitado. As edições de arquivos acontecem em segundo plano sem abrir visualizações de diferenças ou roubar o foco. Você pode continuar trabalhando sem interrupções enquanto o Roo faz alterações. Os arquivos podem ser abertos sem foco para capturar diagnósticos ou permanecer completamente fechados."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Permitir múltiplas chamadas de ferramentas por mensagem",
+			"description": "Quando habilitado, o Roo pode usar múltiplas ferramentas em uma única mensagem. Quando desabilitado, o Roo deve usar uma ferramenta por mensagem. Habilitar isso pode tornar as interações mais rápidas, mas pode causar comportamentos inesperados com alguns modelos."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/ru/settings.json b/webview-ui/src/i18n/locales/ru/settings.json
index 76c3877e..2c4a55c9 100644
--- a/webview-ui/src/i18n/locales/ru/settings.json
+++ b/webview-ui/src/i18n/locales/ru/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Фоновое редактирование",
 			"description": "Предотвращает нарушение фокуса редактора при включении. Редактирование файлов происходит в фоновом режиме без открытия представлений различий или кражи фокуса. Вы можете продолжать работать без перерывов, пока Roo вносит изменения. Файлы могут открываться без фокуса для захвата диагностики или оставаться полностью закрытыми."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Разрешить несколько вызовов инструментов в одном сообщении",
+			"description": "Если включено, Roo может использовать несколько инструментов в одном сообщении. Если отключено, Roo должен использовать один инструмент в одном сообщении. Включение этой функции может ускорить взаимодействие, но может вызвать непредвиденное поведение с некоторыми моделями."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/tr/settings.json b/webview-ui/src/i18n/locales/tr/settings.json
index 26a295ff..d185d163 100644
--- a/webview-ui/src/i18n/locales/tr/settings.json
+++ b/webview-ui/src/i18n/locales/tr/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Arka plan düzenleme",
 			"description": "Etkinleştirildiğinde editör odak kesintisini önler. Dosya düzenlemeleri diff görünümlerini açmadan veya odağı çalmadan arka planda gerçekleşir. Roo değişiklikler yaparken kesintisiz çalışmaya devam edebilirsiniz. Dosyalar tanılamayı yakalamak için odaksız açılabilir veya tamamen kapalı kalabilir."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Mesaj başına birden fazla araç çağrısına izin ver",
+			"description": "Etkinleştirildiğinde, Roo tek bir mesajda birden fazla aracı kullanabilir. Devre dışı bırakıldığında, Roo mesaj başına bir araç kullanmak zorundadır. Bunun etkinleştirilmesi etkileşimleri hızlandırabilir, ancak bazı modellerde beklenmeyen davranışlara neden olabilir."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/vi/settings.json b/webview-ui/src/i18n/locales/vi/settings.json
index 48f63bdf..557383e6 100644
--- a/webview-ui/src/i18n/locales/vi/settings.json
+++ b/webview-ui/src/i18n/locales/vi/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "Chỉnh sửa nền",
 			"description": "Khi được bật, ngăn chặn gián đoạn tiêu điểm trình soạn thảo. Việc chỉnh sửa tệp diễn ra ở nền mà không mở chế độ xem diff hoặc chiếm tiêu điểm. Bạn có thể tiếp tục làm việc không bị gián đoạn trong khi Roo thực hiện thay đổi. Các tệp có thể được mở mà không có tiêu điểm để thu thập chẩn đoán hoặc giữ hoàn toàn đóng."
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "Cho phép nhiều lần gọi công cụ trên mỗi tin nhắn",
+			"description": "Khi được bật, Roo có thể sử dụng nhiều công cụ trong một tin nhắn duy nhất. Khi bị tắt, Roo phải sử dụng một công cụ trên mỗi tin nhắn. Bật tính năng này có thể làm cho các tương tác nhanh hơn nhưng có thể gây ra hành vi không mong muốn với một số mô hình."
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/zh-CN/chat.json b/webview-ui/src/i18n/locales/zh-CN/chat.json
index dc21acee..c3d91009 100644
--- a/webview-ui/src/i18n/locales/zh-CN/chat.json
+++ b/webview-ui/src/i18n/locales/zh-CN/chat.json
@@ -108,7 +108,7 @@
 	"stopTts": "停止文本转语音",
 	"typeMessage": "输入消息...",
 	"typeTask": "在此处输入您的任务...",
-	"addContext": "@添加上下文，/输入命令",
+	"addContext": "@添加上下文, /输入命令, !执行控制台命令, #持久化记忆",
 	"dragFiles": "Shift+拖拽文件",
 	"dragFilesImages": "Shift+拖拽文件/图片",
 	"enhancePromptDescription": "'增强提示'按钮通过提供额外上下文、澄清或重新表述来帮助改进您的请求。尝试在此处输入请求，然后再次点击按钮查看其工作原理。",
@@ -267,7 +267,7 @@
 		"whatsNew": "新特性",
 		"feature1": "<bold>消息队列</bold>: 在 Roo 工作时将多个消息排队，让你可以不间断地继续规划工作流程。",
 		"feature2": "<bold>自定义斜杠命令</bold>: 创建个性化斜杠命令，快速访问常用提示词和工作流程，具备完整的 UI 管理功能。",
-		"feature3": "<bold>增强的 Gemini 工具</bold>: 新的 URL 上下文和 Google 搜索基础功能为 Gemini 模型提供实时网络信息和增强的研究能力。",
+		"feature3": "<bold>编排器（Orchestrator）上线</bold>: 优化并上线了原版中的Orchestrator模式，相比原版拥有更充分的子智能体上下文，使得它有更强的可用性",
 		"hideButton": "隐藏公告",
 		"detailsDiscussLinks": "在 <discordLink>Discord</discordLink> 和 <redditLink>Reddit</redditLink> 获取更多详情并参与讨论 🚀"
 	},
diff --git a/webview-ui/src/i18n/locales/zh-CN/settings.json b/webview-ui/src/i18n/locales/zh-CN/settings.json
index 6d46e337..85e17bed 100644
--- a/webview-ui/src/i18n/locales/zh-CN/settings.json
+++ b/webview-ui/src/i18n/locales/zh-CN/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "后台编辑",
 			"description": "启用后防止编辑器焦点干扰。文件编辑在后台进行，不会打开差异视图或抢夺焦点。你可以在 Roo 进行更改时继续不受干扰地工作。文件可以在不获取焦点的情况下打开以捕获诊断信息，或保持完全关闭状态。"
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "允许每条消息调用多个工具",
+			"description": "启用后，Roo 可以在单条消息中使用多个工具。禁用时，Roo 必须每条消息使用一个工具。启用此功能可以加快交互速度，但可能导致某些模型出现意外行为。"
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/i18n/locales/zh-TW/settings.json b/webview-ui/src/i18n/locales/zh-TW/settings.json
index ffd85239..06e002c0 100644
--- a/webview-ui/src/i18n/locales/zh-TW/settings.json
+++ b/webview-ui/src/i18n/locales/zh-TW/settings.json
@@ -678,6 +678,10 @@
 		"PREVENT_FOCUS_DISRUPTION": {
 			"name": "背景編輯",
 			"description": "啟用後可防止編輯器焦點中斷。檔案編輯會在背景進行，不會開啟 diff 檢視或搶奪焦點。您可以在 Roo 進行變更時繼續不受干擾地工作。檔案可能會在不獲得焦點的情況下開啟以捕獲診斷，或保持完全關閉。"
+		},
+		"ALLOWED_MULTI_CALL": {
+			"name": "允許每則訊息呼叫多個工具",
+			"description": "啟用後，Roo 可以在單則訊息中使用多個工具。停用時，Roo 必須每則訊息使用一個工具。啟用此功能可以加快互動速度，但可能導致某些模型出現非預期行為。"
 		}
 	},
 	"promptCaching": {
diff --git a/webview-ui/src/index.css b/webview-ui/src/index.css
index fbb362ca..050c8bcf 100644
--- a/webview-ui/src/index.css
+++ b/webview-ui/src/index.css
@@ -386,6 +386,14 @@ vscode-dropdown::part(listbox) {
 	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
 }
 
+/* Execute command highlight - distinct style for ! commands */
+.execute-command-textarea-highlight {
+	background-color: color-mix(in srgb, var(--vscode-charts-red, #ff6b6b) 25%, transparent);
+	border-radius: 2px;
+	box-shadow: 0 0 0 1px color-mix(in srgb, var(--vscode-charts-red, #ff6b6b) 40%, transparent);
+	color: transparent;
+}
+
 /**
  * vscrui Overrides / Hacks
  */
diff --git a/webview-ui/src/utils/context-mentions.ts b/webview-ui/src/utils/context-mentions.ts
index 217373c2..4d54f92f 100644
--- a/webview-ui/src/utils/context-mentions.ts
+++ b/webview-ui/src/utils/context-mentions.ts
@@ -228,6 +228,7 @@ export function getContextMenuOptions(
 			const files = queryItems
 				.filter(
 					(item) =>
+						// item.type === ContextMenuOptionType.OpenedFile,
 						item.type === ContextMenuOptionType.File || item.type === ContextMenuOptionType.OpenedFile,
 				)
 				.map((item) => ({
@@ -249,13 +250,21 @@ export function getContextMenuOptions(
 			return commits.length > 0 ? [workingChanges, ...commits] : [workingChanges]
 		}
 
+		// return [
+		// 	{ type: ContextMenuOptionType.Problems },
+		// 	{ type: ContextMenuOptionType.Terminal },
+		// 	{ type: ContextMenuOptionType.URL },
+		// 	{ type: ContextMenuOptionType.Folder },
+		// 	{ type: ContextMenuOptionType.File },
+		// 	{ type: ContextMenuOptionType.Git },
+		// ]
 		return [
+			// { type: ContextMenuOptionType.URL },
+			{ type: ContextMenuOptionType.Git },
 			{ type: ContextMenuOptionType.Problems },
 			{ type: ContextMenuOptionType.Terminal },
-			{ type: ContextMenuOptionType.URL },
-			{ type: ContextMenuOptionType.Folder },
+			// { type: ContextMenuOptionType.Folder },
 			{ type: ContextMenuOptionType.File },
-			{ type: ContextMenuOptionType.Git },
 		]
 	}
 
